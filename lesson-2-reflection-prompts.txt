What happens when you initialize a repository? Why do you need to do it?

	Initializing repository causes adding .git structure of my project changes. I need it to create new git repository to start tracking changes inside of my project..

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Staging area represents only files added to commit, repository represents all commits and all project files, working directory represents actual editing files, but not every of them are one logical change that we are putting as one commit. 
	It offers possibility to compare every stage of work, and control every commit.

How can you use the staging area to make sure you have one commit per logical
change?

	I can see files trying to add to commit, including only that files that I want to commit as a logical change. I can use git diff --staged to track my I want to commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	If we are not sure if this change should be included to the official master branch, for example for prototyping purporses. It could help having master branch clean as stabile version.

How do the diagrams help you visualize the branch structure?
	
	Its easier to follow the reachable states and whole development structure.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
